/**
	 * Calculates time cost for encrypting and decrypting messages by RSA algorithm.
	 * Key pairs are generated by parameterSpec object. Careful: the method is synchronized by the
	 * object
	 * @param messages
	 * 			String array which contains the messages to be delivered.
	 * @param nSpec
	 * 			parameter array which contains the parameter for each message. 
	 * @param processLoops
	 * 			integer array which contains how many loops for each message.
	 * @return	An long[2][length] array, where 2 indicates encrypting time and decrypting time respectively,
	 * 	length indicates how many messages are encrypted/decrypted.
	 * @throws EncryptProcessFailedException
	 * @throws DecryptProcessFailedException
	 * @throws GenerateKeyFailedException
	 * @throws AssessmentTimeOverflowException
	 * 			Indicates the assessment process takes too many time(in the case, 200000 milliseconds) for calculating
	 * @throws InvalidParameterSpecException
	 */